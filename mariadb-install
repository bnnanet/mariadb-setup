#!/bin/sh
set -e
set -u

fn_mariadb_install() { (
    if command -v mysql > /dev/null; then
        return 0
    fi

    sudo apt-get install -y software-properties-common
    sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
    sudo add-apt-repository "deb [arch=amd64,arm64,ppc64el] http://mariadb.mirror.liquidtelecom.com/repo/10.4/ubuntu $(lsb_release -cs) main"
    sudo apt -y install mariadb-server mariadb-client

    # Skip pass, no socket, no root, yes remove anon,
    # yes disallow remote, yes remove test, yes flush
    # May not work if the script is updated
    printf "\nn\nn\nY\nY\nY\nY\n" | sudo mysql_secure_installation

); }

fn_gen_keys() { (
    if test -e /etc/mysql-ssl; then
        return 0
    fi

    mkdir -p ./mysql-ssl/
    cd ./mysql-ssl/ || return 1

    # ignore "Can't load /root/.rnd into RNG"

    echo "gen key"
    openssl genrsa 2048 > ./ca-key.pem

    echo "gen req"
    openssl req -new -x509 -nodes -sha256 -days 36500 \
        -key ./ca-key.pem -out ./ca-cert.pem \
        -subj '/C=US/ST=Utah/L=Provo/CN=paperos.com'

    #echo "rsa decrypt"
    #openssl rsa -in ./server-key.pem -out ./server-key.pem

    echo "self req"
    openssl req -newkey rsa:2048 -days 3650 -nodes \
        -keyout ./server-key.pem -out ./server-req.pem \
        -subj '/C=US/ST=Utah/L=Provo/CN=paperos.com'

    echo "sign"
    openssl x509 -req -in ./server-req.pem -days 3650 \
        -CA ./ca-cert.pem -CAkey ./ca-key.pem -set_serial 01 \
        -out ./server-cert.pem

    openssl rehash ./ca-*

    sudo chown -R mysql:mysql ./mysql-ssl/
    sudo chmod 0700 ./mysql-ssl/*-key.pem
    sudo chmod 0700 ./mysql-ssl/
    sudo rm -rf /etc/mysql-ssl/
    sudo mv ./mysql-ssl/ /etc/
); }

fn_settls() { (
    my_tls_conf="$(
        sudo grep -r -E '^#\s*ssl-ca\s*=' /etc/mysql/mariadb.conf.d/ |
            cut -d':' -f1 |
            sort -u |
            grep -v client ||
            true
    )"
    echo "Checking for TLS cert in ${my_tls_conf}..."
    if test -n "${my_tls_conf}"; then
        echo "Enable TLS cert in ${my_tls_conf}..."

        # TODO add 'tls_version = TLSv1.2,TLSv1.3'
        sudo sed -i -e 's:^#\s*ssl-ca\s*=.*:ssl-ca   = /etc/mysql-ssl/ca-cert.pem:g' "${my_tls_conf}"
        sudo sed -i -e 's:^#\s*ssl-cert\s*=.*:ssl-cert = /etc/mysql-ssl/server-cert.pem:g' "${my_tls_conf}"
        sudo sed -i -e 's:^#\s*ssl-key\s*=.*:ssl-key  = /etc/mysql-ssl/server-key.pem:g' "${my_tls_conf}"

        sudo systemctl restart mariadb
    fi
); }

fn_checktls() { (
    my_username='username'
    my_password='password'

    my_mysql_tls="$(
        mysql -u "${my_username}" -p"${my_password}" databasename -e "SHOW VARIABLES LIKE '%ssl%';"
    )"

    echo "${my_mysql_tls}" |
        grep "have_ssl"

    echo "${my_mysql_tls}" |
        grep "have_ssl.*YES" ||
        (echo "MariaDB TLS Failure" && exit 1)
); }

fn_setbind() { (
    my_bind_conf="$(
        sudo grep -r -E '#?\s*bind-address\s*=\s*' /etc/mysql |
            grep -v galera |
            cut -d':' -f1 |
            sort -u ||
            true
    )"
    echo "Checking for 'bind-address' in '${my_bind_conf}'..."
    if test -n "${my_bind_conf}"; then
        echo "Setting 'bind-address = 0.0.0.0' in '${my_bind_conf}'..."

        sudo sed -i -e 's:\s*bind-address\s*=.*:bind-address            = 0.0.0.0:g' "${my_bind_conf}"
        sudo systemctl restart mariadb
    fi
); }

fn_setpass() { (
    if test -e ./mariadb.env; then
        return 0
    fi

    my_username="username"
    my_password="$(openssl rand -hex 16)"
    my_password="${MYSQL_PASSWORD:-${my_password}}"

    printf "CREATE DATABASE IF NOT EXISTS databasename;
CREATE USER IF NOT EXISTS '%s'@'localhost' IDENTIFIED BY '_not_password_';
ALTER USER '%s'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON databasename.* TO '%s'@'localhost';
FLUSH PRIVILEGES;

CREATE USER IF NOT EXISTS '%s'@'%%' IDENTIFIED BY '_not_password_';
ALTER USER '%s'@'%%' IDENTIFIED BY '%s';
GRANT ALL PRIVILEGES ON databasename.* TO '%s'@'%%';
FLUSH PRIVILEGES;
" "${my_username}" "${my_username}" "${my_username}" "${my_username}" \
        "${my_username}" "${my_password}" "${my_username}" > ./mariadb.tmp.sql

    echo "MYSQL_USERNAME='${my_username}'
MYSQL_PASSWORD='${my_password}'
MYSQL_URL=mysql://${my_username}:${my_password}@localhost/databasename
" | grep 'MYSQL' > ./mariadb.env

    sudo cat ./mariadb.tmp.sql | sudo mysql -u root
    rm -rf ./mariadb.tmp.sql
); }

#apt install -y mysql-client mysql-server
#apt install -y mariadb-client mariadb-server
#sudo apt remove --purge mariadb-client mariadb-server

fn_mariadb_install
fn_gen_keys
fn_settls

fn_checktls
fn_setbind
fn_setpass
