#!/bin/sh
set -e
set -u

fn_mariadb_install() { (
    if command -v mysql > /dev/null; then
        return 0
    fi

    sudo apt-get install -y software-properties-common
    sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
    sudo add-apt-repository "deb [arch=amd64,arm64,ppc64el] http://mariadb.mirror.liquidtelecom.com/repo/10.4/ubuntu $(lsb_release -cs) main"
    sudo apt -y install mariadb-server mariadb-client

    # Skip pass, no socket, no root, yes remove anon,
    # yes disallow remote, yes remove test, yes flush
    # May not work if the script is updated
    printf "\nn\nn\nY\nY\nY\nY\n" | sudo mysql_secure_installation
); }

fn_setpass() { (
    if test -e ./mariadb.env; then
        return 0
    fi

    my_username="username"
    my_password="$(openssl rand -hex 16)"
    my_password="${MYSQL_PASSWORD:-${my_password}}"

    printf "CREATE DATABASE IF NOT EXISTS databasename;
CREATE USER IF NOT EXISTS '%s'@'localhost' IDENTIFIED BY '_not_password_';
ALTER USER '%s'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON databasename.* TO '%s'@'localhost';
FLUSH PRIVILEGES;

CREATE USER IF NOT EXISTS '%s'@'%%' IDENTIFIED BY '_not_password_';
ALTER USER '%s'@'%%' IDENTIFIED BY '%s';
GRANT ALL PRIVILEGES ON databasename.* TO '%s'@'%%';
FLUSH PRIVILEGES;
" "${my_username}" "${my_username}" "${my_username}" "${my_username}" \
        "${my_username}" "${my_password}" "${my_username}" > ./mariadb.tmp.sql

    echo "MYSQL_USERNAME='${my_username}'
MYSQL_PASSWORD='${my_password}'
MYSQL_URL=mysql://${my_username}:${my_password}@localhost/databasename
" | grep 'MYSQL' > ./mariadb.env

    sudo cat ./mariadb.tmp.sql | sudo mysql -u root
    rm -rf ./mariadb.tmp.sql
); }

#apt install -y mysql-client mysql-server
#apt install -y mariadb-client mariadb-server
#sudo apt remove --purge mariadb-client mariadb-server

fn_mariadb_install
fn_setpass
